version: '3.8'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "10MB"
    logging:
      driver: "none"

  api01: &api
    image: rponte/rinha-2024q1-java-is-dead-with-spring-jvm
    hostname: api01
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/rinha_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_SQL_INIT_MODE=never
      - SPRING_JPA_SHOW_SQL=false
      - LOGGING_LEVEL_ROOT=error
    ports:
      - "3001:8080"
    depends_on:
      - postgres
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: "0.55"
          memory: "200MB"
    logging:
      driver: "none"

  api02:
    <<: *api
    hostname: api02
    ports:
      - "3002:8080"

  postgres:
    image: postgres:16.2
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_USER:-rinha_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/etc/postgresql.conf:ro
    command: ["postgres", "-c", "config_file=/etc/postgresql.conf"]
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '140MB'
    logging:
      driver: "none"

#volumes:
#  postgres-data: # named volumes can be managed easier using docker-compose
#    driver: local

networks:
  default:
    driver: bridge
    name: rinha-net-2024q1